name: Update Claude Code Version

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-claude:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Check for new version and update
        id: update
        run: |
          LATEST_VERSION=$(curl -s https://registry.npmjs.org/@anthropic-ai/claude-code/latest | jq -r '.version')
          CURRENT_VERSION=$(grep 'version = ' lib/claude-package.nix | sed 's/.*"\(.*\)".*/\1/')

          echo "Current version: $CURRENT_VERSION"
          echo "Latest version: $LATEST_VERSION"

          if [ "$CURRENT_VERSION" = "$LATEST_VERSION" ]; then
            echo "Already up to date"
            echo "updated=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          URL="https://registry.npmjs.org/@anthropic-ai/claude-code/-/claude-code-${LATEST_VERSION}.tgz"
          NEW_HASH=$(nix-prefetch-url --type sha256 "$URL")
          NEW_HASH_SRI=$(nix hash convert --hash-algo sha256 --to sri "$NEW_HASH")

          echo "New hash: $NEW_HASH_SRI"

          sed -i "s/version = \".*\";/version = \"$LATEST_VERSION\";/" lib/claude-package.nix
          sed -i "s|hash = \".*\";|hash = \"$NEW_HASH_SRI\";|" lib/claude-package.nix

          echo "updated=true" >> $GITHUB_OUTPUT
          echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT

      - name: Test build
        if: steps.update.outputs.updated == 'true'
        id: build
        continue-on-error: true
        run: |
          nix build .#claude-sandbox --no-link

      - name: Set build status
        if: steps.update.outputs.updated == 'true'
        id: build_status
        run: |
          if [ "${{ steps.build.outcome }}" = "success" ]; then
            echo "status=Build test passed" >> $GITHUB_OUTPUT
            echo "passed=true" >> $GITHUB_OUTPUT
          else
            echo "status=Build test failed - manual review required" >> $GITHUB_OUTPUT
            echo "passed=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.update.outputs.updated == 'true'
        id: pr
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "chore: Update claude-code to v${{ steps.update.outputs.version }}"
          title: "chore: Update claude-code to v${{ steps.update.outputs.version }}"
          body: |
            Automated update of Claude Code package to version ${{ steps.update.outputs.version }}.

            ## Changes
            - Updated version in `lib/claude-package.nix`
            - Updated package hash

            ## Testing
            ${{ steps.build_status.outputs.status }}

            This PR was automatically generated by the update-claude workflow.
          branch: update-claude-version
          delete-branch: true

      - name: Enable auto-merge
        if: steps.update.outputs.updated == 'true' && steps.pr.outputs.pull-request-number && steps.build_status.outputs.passed == 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr merge ${{ steps.pr.outputs.pull-request-number }} --auto --rebase
